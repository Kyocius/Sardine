# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages runin sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - backend

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Compiling the code..."
    - C:\Users\luyuh\AppData\Local\Programs\Python\Python310\python.exe D:\compiler\prepareTmp.py
    - Copy-Item -Path .\tests -Destination D:\compiler\tmp\testCase -Recurse
    - "& 'C:\\Program Files\\Java\\jdk-17\\bin\\javac.exe' -encoding UTF-8 -cp .\\res\\*.jar -sourcepath .\\src\\ .\\src\\Compiler.java -d D:\\compiler\\tmp\\out\\class"
    - cd D:\compiler\tmp\out
    - "& 'C:\\Program Files\\Java\\jdk-17\\bin\\jar.exe' -cvfm compiler.jar .\\manifest -C .\\class ."
    - echo "Compile complete."

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... "
    - C:\Users\luyuh\AppData\Local\Programs\Python\Python310\python.exe D:\compiler\preChecker.py ARM
    - echo "finished test"

deploy-job:      # This job runs in the deploy stage.
  stage: backend  # It only runs when *both* jobs in the test stage complete successfully.
  script:
    - C:\Users\luyuh\AppData\Local\Programs\Python\Python310\python.exe D:\compiler\ubuntuPreChecker.py ARM
    - echo "finish"


